{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\01-starting-setup\\\\src\\\\components\\\\Expenses.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ExpenseItem from \"./ExpenseItem.jsx\";\nimport Card from \"./Card.jsx\";\nimport ExpenseFilter from \"./ExpenseFilter.jsx\";\nimport \"./Stylesheets/Expenses.css\";\nimport { element } from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  const [expenses, updateExpensesByFilter] = useState(props.expenses);\n  const filterStatus = false;\n  // updateExpensesByFilter(props.expenses);\n  const filterChangeHandler = FilterYear => {\n    filterStatus = true;\n    setFilteredYear(FilterYear);\n    const filteredExpenses = props.expenses.filter(element => element.date.getFullYear() == filteredYear);\n    updateExpensesByFilter(filteredExpenses);\n  };\n  console.log(\"Hello from Expenses\");\n  // useEffect(() => {\n  //   expenses.map((ele) => (\n  //     <ExpenseItem\n  //       key={ele.id}\n  //       amount={ele.amount}\n  //       date={ele.date}\n  //       title={ele.title}\n  //     />\n  //   ));\n  // }, [expenses]);\n  if (filterStatus) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"expenses\",\n        children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n          selected: filteredYear,\n          onChangeFilter: filterChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), console.log(filteredYear, \"new year\", props.expenses, expenses), expenses.map(ele => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n          amount: ele.amount,\n          date: ele.date,\n          title: ele.title\n        }, ele.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"expenses\",\n        children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n          selected: filteredYear,\n          onChangeFilter: filterChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), props.expenses.map(ele => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n          amount: ele.amount,\n          date: ele.date,\n          title: ele.title\n        }, ele.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(Expenses, \"YfDlctPbby3M4Vn8GxFkxoJFris=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","useEffect","ExpenseItem","Card","ExpenseFilter","element","Expenses","props","filteredYear","setFilteredYear","expenses","updateExpensesByFilter","filterStatus","filterChangeHandler","FilterYear","filteredExpenses","filter","date","getFullYear","console","log","map","ele","amount","title","id"],"sources":["D:/React/01-starting-setup/src/components/Expenses.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem.jsx\";\r\nimport Card from \"./Card.jsx\";\r\nimport ExpenseFilter from \"./ExpenseFilter.jsx\";\r\nimport \"./Stylesheets/Expenses.css\";\r\nimport { element } from \"prop-types\";\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const [expenses, updateExpensesByFilter] = useState(props.expenses);\r\n  const filterStatus = false;\r\n  // updateExpensesByFilter(props.expenses);\r\n  const filterChangeHandler = (FilterYear) => {\r\n    filterStatus = true;\r\n    setFilteredYear(FilterYear);\r\n    const filteredExpenses = props.expenses.filter(\r\n      (element) => element.date.getFullYear() == filteredYear\r\n    );\r\n    updateExpensesByFilter(filteredExpenses);\r\n  };\r\n  console.log(\"Hello from Expenses\");\r\n  // useEffect(() => {\r\n  //   expenses.map((ele) => (\r\n  //     <ExpenseItem\r\n  //       key={ele.id}\r\n  //       amount={ele.amount}\r\n  //       date={ele.date}\r\n  //       title={ele.title}\r\n  //     />\r\n  //   ));\r\n  // }, [expenses]);\r\n  if (filterStatus) {\r\n    return (\r\n      <div>\r\n        <Card className=\"expenses\">\r\n          <ExpenseFilter\r\n            selected={filteredYear}\r\n            onChangeFilter={filterChangeHandler}\r\n          />\r\n          {console.log(filteredYear, \"new year\", props.expenses, expenses)}\r\n          {expenses.map((ele) => (\r\n            <ExpenseItem\r\n              key={ele.id}\r\n              amount={ele.amount}\r\n              date={ele.date}\r\n              title={ele.title}\r\n            />\r\n          ))}\r\n        </Card>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Card className=\"expenses\">\r\n          <ExpenseFilter\r\n            selected={filteredYear}\r\n            onChangeFilter={filterChangeHandler}\r\n          />\r\n          {props.expenses.map((ele) => (\r\n            <ExpenseItem\r\n              key={ele.id}\r\n              amount={ele.amount}\r\n              date={ele.date}\r\n              title={ele.title}\r\n            />\r\n          ))}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Expenses;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,aAAa,MAAM,qBAAqB;AAC/C,OAAO,4BAA4B;AACnC,SAASC,OAAO,QAAQ,YAAY;AAAC;AACrC,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC;EACxD,MAAM,CAACU,QAAQ,EAAEC,sBAAsB,CAAC,GAAGX,QAAQ,CAACO,KAAK,CAACG,QAAQ,CAAC;EACnE,MAAME,YAAY,GAAG,KAAK;EAC1B;EACA,MAAMC,mBAAmB,GAAIC,UAAU,IAAK;IAC1CF,YAAY,GAAG,IAAI;IACnBH,eAAe,CAACK,UAAU,CAAC;IAC3B,MAAMC,gBAAgB,GAAGR,KAAK,CAACG,QAAQ,CAACM,MAAM,CAC3CX,OAAO,IAAKA,OAAO,CAACY,IAAI,CAACC,WAAW,EAAE,IAAIV,YAAY,CACxD;IACDG,sBAAsB,CAACI,gBAAgB,CAAC;EAC1C,CAAC;EACDI,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIR,YAAY,EAAE;IAChB,oBACE;MAAA,uBACE,QAAC,IAAI;QAAC,SAAS,EAAC,UAAU;QAAA,wBACxB,QAAC,aAAa;UACZ,QAAQ,EAAEJ,YAAa;UACvB,cAAc,EAAEK;QAAoB;UAAA;UAAA;UAAA;QAAA,QACpC,EACDM,OAAO,CAACC,GAAG,CAACZ,YAAY,EAAE,UAAU,EAAED,KAAK,CAACG,QAAQ,EAAEA,QAAQ,CAAC,EAC/DA,QAAQ,CAACW,GAAG,CAAEC,GAAG,iBAChB,QAAC,WAAW;UAEV,MAAM,EAAEA,GAAG,CAACC,MAAO;UACnB,IAAI,EAAED,GAAG,CAACL,IAAK;UACf,KAAK,EAAEK,GAAG,CAACE;QAAM,GAHZF,GAAG,CAACG,EAAE;UAAA;UAAA;UAAA;QAAA,QAKd,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA;IACG;MAAA;MAAA;MAAA;IAAA,QACH;EAEV,CAAC,MAAM;IACL,oBACE;MAAA,uBACE,QAAC,IAAI;QAAC,SAAS,EAAC,UAAU;QAAA,wBACxB,QAAC,aAAa;UACZ,QAAQ,EAAEjB,YAAa;UACvB,cAAc,EAAEK;QAAoB;UAAA;UAAA;UAAA;QAAA,QACpC,EACDN,KAAK,CAACG,QAAQ,CAACW,GAAG,CAAEC,GAAG,iBACtB,QAAC,WAAW;UAEV,MAAM,EAAEA,GAAG,CAACC,MAAO;UACnB,IAAI,EAAED,GAAG,CAACL,IAAK;UACf,KAAK,EAAEK,GAAG,CAACE;QAAM,GAHZF,GAAG,CAACG,EAAE;UAAA;UAAA;UAAA;QAAA,QAKd,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA;IACG;MAAA;MAAA;MAAA;IAAA,QACH;EAEV;AACF;AAAC,GAhEQnB,QAAQ;AAAA,KAARA,QAAQ;AAkEjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}